in inline asm
	{mul.f16 %rs398,%rs118,%rs118;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs513,%rs513,%rs398;
}
	// end inline asm

LBB0_186:
	setp.ne.s16 	%p379, %rs120, 0;
	@%p379 bra 	LBB0_188;

	// begin inline asm
	{mul.f16 %rs404,%rs121,%rs121;
}
	// end inline asm
	// begin inline asm
	{add.f16 %rs513,%rs513,%rs404;
}
	// end inline asm

LBB0_188:
	// begin inline asm
	{.reg.b32         f;        
 .reg.b16         r;        
  mov.b16         r,%rs513;     
  cvt.f32.f16     f,r;      
  sqrt.approx.f32   f,f;  
  cvt.rn.f16.f32      r,f;  
  mov.b16         %rs509,r;     
}
	// end inline asm
	bra.uni 	LBB0_200;

LBB0_199:
	// begin inline asm
	{  cvt.rn.f16.f64 %rs509, %fd4;}

	// end inline asm

LBB0_200:
	@%p325 bra 	LBB0_203;

	setp.ge.u32 	%p388, %r69, %r113;
	setp.lt.s32 	%p389, %r70, 0;
	or.pred  	%p390, %p389, %p388;
	setp.ge.u32 	%p391, %r70, %r114;
	or.pred  	%p392, %p390, %p391;
	setp.lt.s32 	%p393, %r72, 0;
	or.pred  	%p394, %p392, %p393;
	setp.ge.u32 	%p395, %r72, %r115;
	or.pred  	%p396, %p394, %p395;
	setp.lt.s32 	%p397, %r71, 0;
	or.pred  	%p398, %p396, %p397;
	setp.ge.u32 	%p399, %r71, %r116;
	or.pred  	%p400, %p398, %p399;
	@%p400 bra 	LBB0_203;

	ld.param.u64 	%rd78, [PoolingKernel_param_0+16];
	mul.lo.s32 	%r359, %r69, %r117;
	mad.lo.s32 	%r360, %r70, %r118, %r359;
	mad.lo.s32 	%r361, %r72, %r119, %r360;
	mad.lo.s32 	%r362, %r71, %r120, %r361;
	cvta.to.global.u64 	%rd72, %rd78;
	mul.wide.u32 	%rd73, %r362, 2;
	add.s64 	%rd7
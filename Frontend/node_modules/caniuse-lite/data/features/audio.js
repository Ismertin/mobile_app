ine asm
	{  cvt.f32.f16 %f40, %rs4;}

	// end inline asm
	add.f32 	%f49, %f49, %f40;
	fma.rn.f32 	%f50, %f40, %f40, %f50;

LBB0_9:
	add.s32 	%r13, %r12, %r21;
	setp.ge.u32 	%p5, %r13, %r5;
	@%p5 bra 	LBB0_11;

	add.s32 	%r32, %r13, %r6;
	mul.wide.u32 	%rd13, %r32, 2;
	add.s64 	%rd14, %rd3, %rd13;
	ld.global.u16 	%rs5, [%rd14];
	// begin inline asm
	{  cvt.f32.f16 %f41, %rs5;}

	// end inline asm
	add.f32 	%f49, %f49, %f41;
	fma.rn.f32 	%f50, %f41, %f41, %f50;

LBB0_11:
	add.s32 	%r14, %r13, %r21;
	setp.ge.u32 	%p6, %r14, %r5;
	@%p6 bra 	LBB0_13;

	add.s32 	%r33, %r14, %r6;
	mul.wide.u32 	%rd15, %r33, 2;
	add.s64 	%rd16, %rd3, %rd15;
	ld.global.u16 	%rs6, [%rd16];
	// begin inline asm
	{  cvt.f32.f16 %f42, %rs6;}

	// end inline asm
	add.f32 	%f49, %f49, %f42;
	fma.rn.f32 	%f50, %f42, %f42, %f50;

LBB0_13:
	add.s32 	%r15, %r14, %r21;
	setp.ge.u32 	%p7, %r15, %r5;
	@%p7 bra 	LBB0_15;

	add.s32 	%r34, %r15, %r6;
	mul.wide.u32 	%rd17, %r34, 2;
	add.s64 	%rd18, %rd3, %rd17;
	ld.global.u16 	%rs7, [%rd18];
	// begin inline asm
	{  cvt.f32.f16 %f43, %rs7;}

	// end inline asm
	add.f32 	%f49, %f49, %f43;
	fma.rn.f32 	%f50, %f43, %f43, %f50;

LBB0_15:
	add.s32 	%r16, %r15, %r21;
	setp.ge.u32 	%p8, %r16, %r5;
	@%p8 bra 	LBB0_17;

	add.s32 	%r35, %r16, %r6;
	mul.wide.u32 	%rd19, %r35, 2;
	add.s64 	%rd20, %rd3, %rd19;
	ld.global.u16 	%rs8, [%rd20];
	// begin inline asm
	{  cvt.f32.f16 %f44, %rs8;}

	// end inline asm
	add.f32 	%f49, %f49, %f44
s51, 0;
	@%p4 bra 	LBB0_6;

	setp.ne.s16 	%p5, %rs54, 0;
	// begin inline asm
	{  cvt.f32.f16 %f27, %rs106;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f28, %rs110;}

	// end inline asm
	fma.rn.f32 	%f42, %f11, %f27, %f28;
	setp.lt.f32 	%p6, %f42, 0f00000000;
	selp.f32 	%f43, 0f00000000, %f42, %p6;
	selp.f32 	%f44, %f43, %f42, %p5;
	abs.f32 	%f45, %f44;
	setp.le.f32 	%p7, %f45, 0f7F800000;
	selp.f32 	%f29, %f44, 0f00000000, %p7;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs114, %f29;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f30, %rs20;}

	// end inline asm
	sub.f32 	%f46, %f30, %f12;
	// begin inline asm
	{  cvt.f32.f16 %f31, %rs107;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f32, %rs111;}

	// end inline asm
	fma.rn.f32 	%f47, %f46, %f31, %f32;
	setp.lt.f32 	%p8, %f47, 0f00000000;
	selp.f32 	%f48, 0f00000000, %f47, %p8;
	selp.f32 	%f49, %f48, %f47, %p5;
	abs.f32 	%f50, %f49;
	setp.le.f32 	%p9, %f50, 0f7F800000;
	selp.f32 	%f33, %f49, 0f00000000, %p9;
	// begin inline asm
	{  cvt.rn.f16.f32 %rs115, %f33;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f34, %rs21;}

	// end inline asm
	sub.f32 	%f51, %f34, %f13;
	// begin inline asm
	{  cvt.f32.f16 %f35, %rs104;}

	// end inline asm
	// begin inline asm
	{  cvt.f32.f16 %f36, %rs108;}

	// end inline asm
	fma.rn.f32 	%f52, %f51, %f35, %f36;
	setp.lt.f32 	%p10, %f52, 0f00000000;
	selp.f32 	%f53, 0f00000000, %f52, %p10;
	selp.f32 	%f54, %f53, %f52, %p5;